# Main workflow

on:
  push:
    branches:
      - master

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    env:
      DISPLAY: ':99.0'
      QT_SELECT: "qt6"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint pytest
        python -m pip install .
    - name: Lint with pylint
      run: |
        pylint pqthreads
    - name: Install test dependencies
      run: |
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0 libxcb-shape0 libglib2.0-0 libgl1-mesa-dev
        sudo apt-get install -y '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
        # start xvfb in the background
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1920x1080x24 &
    - name: Test with pytest
      run: |
        pytest -v -s

  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: push
    needs: [test-and-lint]
    if: github.repository == 'swvanbuuren/pqthreads'
    environment:
      name: pypi
      url: https://pypi.org/project/pqthreads/
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        if: steps.release.outputs.released == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        if: steps.release.outputs.released == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install build
      
      - name: Build package
        if: steps.release.outputs.released == 'true'
        run: python -m build

      - name: Publish package distributions to PyPI
        id: pypi-publish
        if: steps.release.outputs.released == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true

      - name: Publish package distributions to GitHub Releases
        id: github-release
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/upload-to-gh-release@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
